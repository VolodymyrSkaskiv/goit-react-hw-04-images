import { useState, useEffect } from 'react';
import fetchImages from '../api/api';
import Searchbar from './Searchbar/Searchbar';
import ImageGallery from './ImageGallery/ImageGallery';
import Loader from './Loader/Loader';
import Button from 'components/Button/Button';
import Modal from './Modal/Modal';

const App = () => {
  const [inputValue, setInputValue] = useState('');
  const [search, setSearch] = useState('');
  const [images, setImages] = useState('');
  const [page, setPage] = useState(0);
  const [total, setTotal] = useState(1);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [modal, setModal] = useState({ showModal: false, largeImageURL: '' });
  const [foundResult, setFoundResult] = useState(false);
  const [lastPage, setLastPage] = useState(0);

  const handleChange = event => {
    setInputValue(event.target.value);
  };

  const handleSubmit = event => {
    event.preventDefault();
    if (inputValue === '') {
      alert('Please enter your query');
      return;
    }
    if (search === inputValue) return;
    setImages([]);
    setSearch(inputValue);
    setPage(1);
  };

  const clickLoad = () => {
    setPage(prevState => prevState + 1);
  };

  const toggleModal = () => {
    setModal(prevState => ({ ...prevState, showModal: !prevState.showModal }));
  };

  const openModal = largeImageURL => {
    setModal(prevState => ({ ...prevState, largeImageURL }));
    toggleModal();
  };

  useEffect(() => {
    if (page === 0) return;

    const fetchImagesByQuery = async searchQuery => {
      setLoading(true); // –ø–æ–∫–∞–∑—É—î–º–æ –ª–æ–∞–¥–µ—Ä
      setError(null); // –æ—á–∏—â–∞—î–º–æ –ø–æ–º–∏–ª–∫—É
      setFoundResult(false); // –æ—á–∏—â–∞—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤

      try {
        const response = await fetchImages(searchQuery, page);
        setImages(prevState => [...prevState, ...response.hits]);
        setLastPage(Math.ceil(response.totalHits / 12));
        response.totalHits === 0 && setFoundResult(true); // —è–∫—â–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –Ω–µ–º–∞—î, —Ç–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
      } catch (error) {
        setError(error);
      } finally {
        setLoading(false); // –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –ª–æ–∞–¥–µ—Ä
      }
    };

    fetchImagesByQuery(search);
  }, [page, search]);

  return (
    <div>
      {/*—Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–ª–µ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É */}
      <Searchbar handleSubmit={this.handleSubmit} />

      {/* –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –ø–æ–º–∏–ª–∫–∞ */}
      {error && (
        <h2 style={{ textAlign: 'center' }}>
          Something went wrong: ({error})!
        </h2>
      )}

      {/* –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∑–æ–±—Ä–∞–∂–µ–Ω—å */}
      <ImageGallery togleModal={this.openModal} images={images} />

      {/* –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è */}
      {loading && <Loader />}

      {/* –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –ø–æ—Ä–æ–∂–Ω—ñ–º–∏ */}
      {this.state.empty && (
        <h2 style={{ textAlign: 'center' }}>
          Sorry. There are no images ... üò≠
        </h2>
      )}

      {/* –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ –∫–Ω–æ–ø–∫—É "Load more" */}
      {total / 12 > page && <Button clickLoad={this.clickLoad} />}

      {/* –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ */}
      {modal.showModal && (
        <Modal onClose={toggleModal}>
          largeImageURL = {modal.largeImageURL} />
        </Modal>
      )}
    </div>
  );
};

export default App;
